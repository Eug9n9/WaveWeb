<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <debug />

    <global-method-security pre-post-annotations="enabled" />

    <http pattern="/resources/**" security="none"/>

    <http use-expressions="true">
        <intercept-url pattern="/" access="isAuthenticated()" />
        <intercept-url pattern="/report" access="isAuthenticated()" />
        <!--
             Allow all other requests. In a real application you should
             adopt a whitelisting approach where access is not allowed by default
          -->
        <form-login login-page="/login"/>
        <logout logout-success-url="/" delete-cookies="JSESSIONID"/>

        <!-- Uncomment to limit the number of sessions a user can have -->
        <!--session-management invalid-session-url="/timeout.jsp">
            <concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
        </session-management-->

    </http>

    <authentication-manager>
        <authentication-provider>
            <user-service>
                <user name="aa" password="aa" authorities="user" />
                <user name="bb" password="bb" authorities="user" />
            </user-service>
        </authentication-provider>
    </authentication-manager>

</beans:beans>
